function fixCreativeTypes(className, deobfName, code)
{
  add(className, deobfName, CLIENT, "Adding/fixing subtypes in creative",
  function(cn)
  {
    for (var i = 0; i < cn.methods.size(); i++)
    {
      mn = cn.methods.get(i);
      if (mn.name + mn.desc == "a(ILve;Ljava/util/List;)V")
      {
        cn.methods.remove(mn);
      }
    }
    var mn = MethodNode(ACC_PUBLIC, "a", "(ILve;Ljava/util/List;)V", null, null);
    mn.instructions.add(toInsnList(code));
    cn.methods.add(mn);
  });
}
function skipIfHoldingSwordInCreative(mn)
{
  var label = LabelNode();
  return CodeInserter(
    BeginningFinder(),
    [
      VarInsnNode(ALOAD, 0),
      FieldInsnNode(GETFIELD, "bdr", "k", "Laaj;"),
      MethodInsnNode(INVOKEVIRTUAL, "aaj", "d", "()Z"),
      JumpInsnNode(IFEQ, label),
      VarInsnNode(ALOAD, 0),
      FieldInsnNode(GETFIELD, "bdr", "a", "Lnet/minecraft/client/Minecraft;"),
      FieldInsnNode(GETFIELD, "net/minecraft/client/Minecraft", "g", "Lbdv;"),
      MethodInsnNode(INVOKEVIRTUAL, "bdv", "bG", "()Lwm;"),
      JumpInsnNode(IFNULL, label),
      VarInsnNode(ALOAD, 0),
      FieldInsnNode(GETFIELD, "bdr", "a", "Lnet/minecraft/client/Minecraft;"),
      FieldInsnNode(GETFIELD, "net/minecraft/client/Minecraft", "g", "Lbdv;"),
      MethodInsnNode(INVOKEVIRTUAL, "bdv", "bG", "()Lwm;"),
      MethodInsnNode(INVOKEVIRTUAL, "wm", "b", "()Lwk;"),
      TypeInsnNode(INSTANCEOF, "xr"),
      JumpInsnNode(IFEQ, label),
      InsnNode(RETURN),
      label,
      FrameNode(F_SAME, 0, null, 0, null),
    ],
    INSERT_BEFORE
  ).process(mn);
}

function getOreTypesCode()
{
  var l0 = LabelNode();
  return [
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_0),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ILOAD, 1),
    FieldInsnNode(GETSTATIC, "apa", "ct", "Lapa;"),
    FieldInsnNode(GETFIELD, "apa", "cz", "I"),
    JumpInsnNode(IF_ICMPEQ, l0),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_1),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_2),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    l0,
    FrameNode(F_SAME, 0, null, 0, null),
    InsnNode(RETURN),
  ];
}
fixCreativeTypes("ans", "BlockOre", getOreTypesCode());
fixCreativeTypes("aof", "BlockRedstoneOre", getOreTypesCode());
fixCreativeTypes("FCBlockAestheticNonOpaque", null,
[
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  InsnNode(ICONST_5),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 10),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 12),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  InsnNode(RETURN),
]);
fixCreativeTypes("FCBlockMouldingAndDecorative", null,
[
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  InsnNode(ICONST_0),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 12),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 13),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 15),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  InsnNode(RETURN),
]);
fixCreativeTypes("FCBlockPlanter", null,
[
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  InsnNode(ICONST_0),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  InsnNode(ICONST_1),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  InsnNode(ICONST_2),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 8),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 9),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  InsnNode(RETURN),
]);
function getWoodTypesCode()
{
  var l0 = LabelNode();
  var l1 = LabelNode();
  return [
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_0),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_1),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_2),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_3),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ILOAD, 1),
    FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodBirchMouldingAndDecorative", "Lapa;"),
    FieldInsnNode(GETFIELD, "apa", "cz", "I"),
    JumpInsnNode(IF_ICMPNE, l0),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_4),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_5),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 6),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 7),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 8),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 9),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 10),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 11),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    l0,
    FrameNode(F_SAME, 0, null, 0, null),
    VarInsnNode(ILOAD, 1),
    FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodJungleSidingAndCorner", "Lapa;"),
    FieldInsnNode(GETFIELD, "apa", "cz", "I"),
    JumpInsnNode(IF_ICMPNE, l1),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    InsnNode(ICONST_5),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 6),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    VarInsnNode(ALOAD, 3),
    TypeInsnNode(NEW, "wm"),
    InsnNode(DUP),
    VarInsnNode(ILOAD, 1),
    InsnNode(ICONST_1),
    IntInsnNode(BIPUSH, 7),
    MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
    MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
    InsnNode(POP),
    l1,
    FrameNode(F_SAME, 0, null, 0, null),
    InsnNode(RETURN),
  ];
}
fixCreativeTypes("FCBlockWoodMouldingAndDecorative", null, getWoodTypesCode());
fixCreativeTypes("FCBlockWoodSidingAndCornerAndDecorative", null, getWoodTypesCode());
fixCreativeTypes("FCBlockAestheticOpaqueEarth", null,
[
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 6),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  VarInsnNode(ALOAD, 3),
  TypeInsnNode(NEW, "wm"),
  InsnNode(DUP),
  VarInsnNode(ILOAD, 1),
  InsnNode(ICONST_1),
  IntInsnNode(BIPUSH, 7),
  MethodInsnNode(INVOKESPECIAL, "wm", "<init>", "(III)V"),
  MethodInsnNode(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z"),
  InsnNode(POP),
  InsnNode(RETURN),
]);
function fixWoodBlockPick(cn)
{
  var l0 = LabelNode();
  var l1 = LabelNode();
  var l2 = LabelNode();
  var l3 = LabelNode();
  var l4 = LabelNode();
  var l5 = LabelNode();
  var mn = MethodNode(ACC_PUBLIC, "h", "(Laab;III)I", null, null);
  mn.instructions.add(toInsnList(
    [
      VarInsnNode(ALOAD, 1),
      VarInsnNode(ILOAD, 2),
      VarInsnNode(ILOAD, 3),
      VarInsnNode(ILOAD, 4),
      MethodInsnNode(INVOKEVIRTUAL, "aab", "a", "(III)I"),
      VarInsnNode(ISTORE, 5),
      VarInsnNode(ILOAD, 5),
      FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodSpruceMouldingAndDecorative", "Lapa;"),
      FieldInsnNode(GETFIELD, "apa", "cz", "I"),
      JumpInsnNode(IF_ICMPNE, l0),
      InsnNode(ICONST_1),
      InsnNode(IRETURN),
      l0,
      FrameNode(F_APPEND,1, [INTEGER], 0, null),
      VarInsnNode(ILOAD, 5),
      FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodSpruceSidingAndCorner", "Lapa;"),
      FieldInsnNode(GETFIELD, "apa", "cz", "I"),
      JumpInsnNode(IF_ICMPNE, l1),
      InsnNode(ICONST_1),
      InsnNode(IRETURN),
      l1,
      FrameNode(F_SAME, 0, null, 0, null),
      VarInsnNode(ILOAD, 5),
      FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodBirchMouldingAndDecorative", "Lapa;"),
      FieldInsnNode(GETFIELD, "apa", "cz", "I"),
      JumpInsnNode(IF_ICMPNE, l2),
      InsnNode(ICONST_2),
      InsnNode(IRETURN),
      l2,
      FrameNode(F_SAME, 0, null, 0, null),
      VarInsnNode(ILOAD, 5),
      FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodBirchSidingAndCorner", "Lapa;"),
      FieldInsnNode(GETFIELD, "apa", "cz", "I"),
      JumpInsnNode(IF_ICMPNE, l3),
      InsnNode(ICONST_2),
      InsnNode(IRETURN),
      l3,
      FrameNode(F_SAME, 0, null, 0, null),
      VarInsnNode(ILOAD, 5),
      FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodJungleMouldingAndDecorative", "Lapa;"),
      FieldInsnNode(GETFIELD, "apa", "cz", "I"),
      JumpInsnNode(IF_ICMPNE, l4),
      InsnNode(ICONST_3),
      InsnNode(IRETURN),
      l4,
      FrameNode(F_SAME, 0, null, 0, null),
      VarInsnNode(ILOAD, 5),
      FieldInsnNode(GETSTATIC, "FCBetterThanWolves", "fcBlockWoodJungleSidingAndCorner", "Lapa;"),
      FieldInsnNode(GETFIELD, "apa", "cz", "I"),
      JumpInsnNode(IF_ICMPNE, l5),
      InsnNode(ICONST_3),
      InsnNode(IRETURN),
      l5,
      FrameNode(F_SAME, 0, null, 0, null),
      InsnNode(ICONST_0),
      InsnNode(IRETURN),
    ]
  ));
  cn.methods.add(mn);
}
add("FCBlockWoodMouldingAndDecorative", null, CLIENT, "Fixing block middle-click picking", fixWoodBlockPick);
add("FCBlockWoodSidingAndCornerAndDecorative", null, CLIENT, "Fixing block middle-click picking", fixWoodBlockPick);

tweak("ayy", "GuiContainerCreative", CLIENT, "i()V", 0xB6582FB7, "Replacing enchanted books with scrolls",
function(mn)
{
  for (var i = 0; i < mn.instructions.size(); i++)
  {
    var n = mn.instructions.get(i);
    if (isInstance(n, "org.objectweb.asm.tree.MethodInsnNode") && n.owner.equals("vw") && n.name.equals("a") && n.desc.equals("(Lyz;Ljava/util/List;)V"))
    {
      n.opcode = INVOKESTATIC;
      n.owner = "GPEBTWTweak";
      n.name = "addCreativeEnchantment";
      mn.instructions.insert(n, toInsnList(
        [
          InsnNode(POP),
        ]
      ));
      return true;
    }
  }
});
tweak("bdr", "PlayerControllerMP", CLIENT, "b(IIII)V", 0xC6374240, "(1/2) Fix swords breaking blocks in creative",
skipIfHoldingSwordInCreative);
tweak("bdr", "PlayerControllerMP", CLIENT, "c(IIII)V", 0xE96B41E3, "(2/2) Fix swords breaking blocks in creative",
skipIfHoldingSwordInCreative);
